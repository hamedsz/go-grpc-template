// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewSample struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewSample) Reset()         { *m = NewSample{} }
func (m *NewSample) String() string { return proto.CompactTextString(m) }
func (*NewSample) ProtoMessage()    {}
func (*NewSample) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{0}
}

func (m *NewSample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewSample.Unmarshal(m, b)
}
func (m *NewSample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewSample.Marshal(b, m, deterministic)
}
func (m *NewSample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewSample.Merge(m, src)
}
func (m *NewSample) XXX_Size() int {
	return xxx_messageInfo_NewSample.Size(m)
}
func (m *NewSample) XXX_DiscardUnknown() {
	xxx_messageInfo_NewSample.DiscardUnknown(m)
}

var xxx_messageInfo_NewSample proto.InternalMessageInfo

func (m *NewSample) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Sample struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{1}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Sample) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*NewSample)(nil), "sample.NewSample")
	proto.RegisterType((*Sample)(nil), "sample.Sample")
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor_2141552de9bf11d0) }

var fileDescriptor_2141552de9bf11d0 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0xcc, 0x2d,
	0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xe4, 0xb9, 0x38,
	0xfd, 0x52, 0xcb, 0x83, 0xc1, 0x1c, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46,
	0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x87, 0x8b, 0x0d, 0x2a, 0xcb, 0xc7, 0xc5, 0x94,
	0x99, 0x02, 0x96, 0x63, 0x0d, 0x62, 0xca, 0x4c, 0x81, 0xab, 0x66, 0x42, 0xa8, 0x36, 0x72, 0xe2,
	0xe2, 0x85, 0xa8, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x32, 0xe4, 0xe2, 0x71, 0x2e,
	0x4a, 0x4d, 0x2c, 0x49, 0x85, 0x1a, 0x22, 0xa8, 0x07, 0x75, 0x06, 0xdc, 0x56, 0x29, 0x3e, 0x98,
	0x10, 0x84, 0xef, 0xa4, 0x14, 0xa5, 0x90, 0x5a, 0x01, 0x11, 0x49, 0xce, 0xcf, 0xd5, 0x4f, 0xcf,
	0x8f, 0x4f, 0x2f, 0x2a, 0x48, 0x8e, 0x2f, 0x49, 0xcd, 0x2d, 0xc8, 0x49, 0x2c, 0x49, 0xb5, 0x2e,
	0x2a, 0x48, 0x4e, 0x62, 0x03, 0xfb, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x72, 0x9a,
	0x6f, 0xd5, 0x00, 0x00, 0x00,
}
